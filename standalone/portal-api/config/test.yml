jwt:
  expiresIn: 900
  refreshExpiresIn: 604800
  cookieExpiresIn: 604800
  secret: 'example@123'

app:
  nodeEnv: 'test'
  port: 3000
  apiPrefix: 'api'
  fallbackLanguage: 'en'
  name: 'Taral'
  version: 'v0.1'
  description: 'Taral API'
  backendDomain: 'http://localhost:3000'
  frontendDomain: 'http://localhost:4200'
  sameSite: true
  runchainhook: false
  runjobs: false
  runthrottle: false
  runevents: false
  fluentLogging: false

logging:
  level: 'error'
  fluentdlogging: false

aws:
  bucket: ''
  region: ''
  accessKeyId: ''
  secretAccessKey: ''

file:
  driver: 'local' # or S3, in which case aws config must be set
  localDir: 'local_storage'

db:
  host: 'localhost'
  type: 'postgres'
  name: 'api'
  port: 5432
  username: 'root'
  password: 'secret'
  synchronize: false
  maxConnections: 100
  sslEnabled: false
  rejectUnauthorized: false
  ca: ''
  key: ''
  cert: ''
  url: ''

redis: 
  driver: 'redis'
  host: 'localhost'
  port: 6379
  db: ''
  password: ''
  username: ''

queue:
  driver: 'redis'
  host: 'localhost'
  port: 6379
  db: ''
  password: ''
  username: ''

throttle:
  enabled: false
  global:
    ttl: 60
    limit: 60
  login:
    prefix: 'login_fail_throttle'
    limit: 5
    duration: 2592000
    blockDuration: 3000

stripe:
  secretKey: ''
  apiVersion: '2023-10-16'

mail:
  user: ''
  password: ''
  from: 'taral'
  defaultEmail: 'taral@gmail.com'
  defaultName: 'Taral'
  queueName: 'taral-mail'

onchain:
  mock: true
  privateKey: ''
  publicKey: ''
  address: ''
  network: ''
