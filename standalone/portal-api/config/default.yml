server:
  port: 3000
  origin: 'http://localhost:3000'

# DATABASE_TYPE=postgres
# DATABASE_HOST=localhost
# DATABASE_PORT=5432
# DATABASE_USERNAME=root
# DATABASE_PASSWORD=secret
# DATABASE_NAME=api
# DATABASE_SYNCHRONIZE=false
# DATABASE_MAX_CONNECTIONS=100
# DATABASE_SSL_ENABLED=false
# DATABASE_REJECT_UNAUTHORIZED=false
# DATABASE_CA=
# DATABASE_KEY=
# DATABASE_CERT=

db:
  host: 'localhost'
  type: 'postgres'
  name: 'api'
  port: 5432
  username: 'root'
  password: 'secret'
  synchronize: false
  maxConnections: 100
  sslEnabled: false
  rejectUnauthorized: false
  ca: ''
  key: ''
  cert: ''
  url: ''

jwt:
  expiresIn: 900
  refreshExpiresIn: 604800
  cookieExpiresIn: 604800
  secret: 'example@123'

# NODE_ENV=development
# APP_PORT=3000
# APP_NAME="Taral Business API"
# API_PREFIX=api
# APP_FALLBACK_LANGUAGE=en
# APP_RUN_CHAINHOOK=false
# APP_RUN_JOBS=false
# FRONTEND_DOMAIN=http://localhost:3000
# BACKEND_DOMAIN=http://localhost:3000
# APP_FLUENTLOGGING=false


app:
  nodeEnv: 'development'
  port: 3000
  apiPrefix: 'api'
  fallbackLanguage: 'en'
  name: 'Taral'
  version: 'v0.1'
  description: 'Taral API'
  backendDomain: 'http://localhost:3000'
  frontendDomain: 'http://localhost:3001'
  sameSite: true
  runchainhook: false
  runjobs: false
  runthrottle: false
  runevents: false
  fluentLogging: false

aws:
  bucket: ''
  region: ''
  accessKeyId: ''
  secretAccessKey: ''

file:
  driver: 'local' # or S3, in which case aws config must be set
  localDir: 'local_storage'


logging:
  level: 'error'
  fluentdlogging: false

# MAIL_HOST=localhost
# MAIL_PORT=1025
# MAIL_USER=
# MAIL_PASSWORD=
# MAIL_IGNORE_TLS=true
# MAIL_SECURE=false
# MAIL_REQUIRE_TLS=false
# MAIL_DEFAULT_EMAIL=noreply@example.com
# MAIL_DEFAULT_NAME=Api
# MAIL_CLIENT_PORT=1080

mail:
  host: 'localhost'
  port: 1025
  user: ''
  password: ''
  from: 'taral'
  defaultEmail: 'taral@gmail.com'
  defaultName: 'Taral'
  preview: true
  ignoreTls: true
  secure: false
  requireTls: false
  queueName: 'taral-mail'

queue:
  driver: 'redis'
  host: 'localhost'
  port: 6379
  db: ''
  password: ''
  username: ''

onchain:
  mock: true
  privateKey: '753b7cc01a1a2e86221266a154af739463fce51219d97e4f856cd7200c3bd2a601'
  publicKey: '0390a5cac7c33fda49f70bc1b0866fa0ba7a9440d9de647fecb8132ceb76a94dfa'
  address: ''
  network: ''

throttle:
  enabled: true
  global:
    ttl: 60
    limit: 60
  login:
    prefix: 'login_fail_throttle'
    limit: 5
    duration: 2592000
    blockDuration: 3000

twofa:
  authenticationAppNAme: 'taral'

winston:
  groupName: 'taral'
  streamName: 'taral-stream'
  awsAccessKeyId: ''
  awsSecretAccessKey: ''
  awsRegion: ''
  
