{
  "openapi": "3.0.0",
  "paths": {
    "/api/health": {
      "get": {
        "operationId": "AppController_health",
        "parameters": [],
        "responses": { "200": { "description": "" } }
      }
    },
    "/": {
      "get": {
        "operationId": "HomeController_appInfo",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Home"]
      }
    },
    "/api/v1/entities": {
      "post": {
        "operationId": "EntityController_createEntity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "logo": { "type": "string", "format": "binary" },
                  "name": { "type": "string", "format": "string" },
                  "beneficialOwner": { "type": "string", "format": "string" },
                  "abbreviation": { "type": "string", "format": "string" },
                  "nationality": { "type": "string", "format": "string" },
                  "headquarters": { "type": "string", "format": "string" },
                  "industryType": { "type": "string", "format": "string" },
                  "coreBusiness": { "type": "string", "format": "string" },
                  "incorporationDate": { "type": "string", "format": "date" },
                  "legalForm": { "type": "string", "format": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEntityDetailsResponse"
                }
              }
            }
          }
        },
        "tags": ["Entities"]
      }
    },
    "/api/v1/entities/{id}": {
      "patch": {
        "operationId": "EntityController_updateEntity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "format": "string" },
                  "beneficialOwner": { "type": "string", "format": "string" },
                  "abbreviation": { "type": "string", "format": "string" },
                  "nationality": { "type": "string", "format": "string" },
                  "headquarters": { "type": "string", "format": "string" },
                  "industryType": { "type": "string", "format": "string" },
                  "coreBusiness": { "type": "string", "format": "string" },
                  "incorporationDate": { "type": "string", "format": "date" },
                  "legalForm": { "type": "string", "format": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEntityDetailsResponse"
                }
              }
            }
          }
        },
        "tags": ["Entities"]
      },
      "delete": {
        "operationId": "EntityController_deleteEntity",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Entities"]
      },
      "get": {
        "operationId": "EntityController_getEntity",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEntityDetailsResponse"
                }
              }
            }
          }
        },
        "tags": ["Entities"]
      }
    },
    "/api/v1/logo/{id}": {
      "get": {
        "operationId": "EntityLogoController_getLogo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "image/png": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          }
        },
        "tags": ["Logos"]
      }
    },
    "/api/v1/files/create-file": {
      "post": {
        "operationId": "FilesController_createFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CreateFileResponse" }
              }
            }
          }
        },
        "tags": ["Files"]
      }
    },
    "/api/v1/files/update-file": {
      "post": {
        "operationId": "FilesController_updateFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary" },
                  "externalId": { "type": "number" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateFileResponse" }
              }
            }
          }
        },
        "tags": ["Files"]
      }
    },
    "/api/v1/files/request-file": {
      "post": {
        "operationId": "FilesController_requestFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "externalId": { "type": "number" } }
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Files"]
      }
    },
    "/api/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterUserDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserSerializer" }
              }
            }
          }
        },
        "tags": ["user"]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserLoginDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["user"]
      }
    },
    "/api/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["user"]
      }
    },
    "/api/auth/activate-account": {
      "get": {
        "operationId": "AuthController_activateAccount",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["user"]
      }
    },
    "/api/auth/forgot-password": {
      "put": {
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ForgetPasswordDto" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "tags": ["user"]
      }
    },
    "/api/auth/reset-password": {
      "put": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ResetPasswordDto" }
            }
          }
        },
        "responses": { "204": { "description": "" } },
        "tags": ["user"]
      }
    },
    "/api/auth/profile": {
      "get": {
        "operationId": "AuthController_profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserSerializer" }
              }
            }
          }
        },
        "tags": ["user"]
      },
      "put": {
        "operationId": "AuthController_updateProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserProfileDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserSerializer" }
              }
            }
          }
        },
        "tags": ["user"]
      }
    },
    "/api/auth/change-password": {
      "put": {
        "operationId": "AuthController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChangePasswordDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["user"]
      }
    },
    "/api/users": {
      "get": {
        "operationId": "AuthController_findAll",
        "parameters": [
          {
            "name": "keywords",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["user"]
      },
      "post": {
        "operationId": "AuthController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserSerializer" }
              }
            }
          }
        },
        "tags": ["user"]
      }
    },
    "/api/users/{id}": {
      "put": {
        "operationId": "AuthController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserSerializer" }
              }
            }
          }
        },
        "tags": ["user"]
      },
      "get": {
        "operationId": "AuthController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserSerializer" }
              }
            }
          }
        },
        "tags": ["user"]
      }
    },
    "/api/logout": {
      "post": {
        "operationId": "AuthController_logOut",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["user"]
      }
    },
    "/api/auth/token-info": {
      "get": {
        "operationId": "AuthController_getRefreshToken",
        "parameters": [
          {
            "name": "keywords",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["user"]
      }
    },
    "/api/revoke/{id}": {
      "put": {
        "operationId": "AuthController_revokeToken",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RefreshTokenEntity" }
              }
            }
          }
        },
        "tags": ["user"]
      }
    },
    "/api/email-templates": {
      "post": {
        "operationId": "EmailTemplateController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EmailTemplate" }
              }
            }
          }
        },
        "tags": ["email-templates"]
      },
      "get": {
        "operationId": "EmailTemplateController_findAll",
        "parameters": [
          {
            "name": "keywords",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["email-templates"]
      }
    },
    "/api/email-templates/{id}": {
      "get": {
        "operationId": "EmailTemplateController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EmailTemplate" }
              }
            }
          }
        },
        "tags": ["email-templates"]
      },
      "put": {
        "operationId": "EmailTemplateController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EmailTemplate" }
              }
            }
          }
        },
        "tags": ["email-templates"]
      },
      "delete": {
        "operationId": "EmailTemplateController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["email-templates"]
      }
    },
    "/api/roles": {
      "post": {
        "operationId": "RolesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateRoleDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoleSerializer" }
              }
            }
          }
        },
        "tags": ["roles"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "RolesController_findAll",
        "parameters": [
          {
            "name": "keywords",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          },
          {
            "required": false,
            "name": "keywords",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          },
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["roles"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/roles/{id}": {
      "get": {
        "operationId": "RolesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoleSerializer" }
              }
            }
          }
        },
        "tags": ["roles"],
        "security": [{ "bearer": [] }]
      },
      "put": {
        "operationId": "RolesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateRoleDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RoleSerializer" }
              }
            }
          }
        },
        "tags": ["roles"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "RolesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["roles"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/permissions": {
      "post": {
        "operationId": "PermissionsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePermissionDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Permission" }
              }
            }
          }
        },
        "tags": ["permissions"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "PermissionsController_findAll",
        "parameters": [
          {
            "name": "keywords",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          },
          {
            "required": false,
            "name": "keywords",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "name": "limit",
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          },
          {
            "required": false,
            "name": "page",
            "in": "query",
            "schema": { "minimum": 1, "type": "number" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["permissions"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "operationId": "PermissionsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Permission" }
              }
            }
          }
        },
        "tags": ["permissions"],
        "security": [{ "bearer": [] }]
      },
      "put": {
        "operationId": "PermissionsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdatePermissionDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Permission" }
              }
            }
          }
        },
        "tags": ["permissions"],
        "security": [{ "bearer": [] }]
      },
      "delete": {
        "operationId": "PermissionsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } },
        "tags": ["permissions"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/permissions/sync": {
      "post": {
        "operationId": "PermissionsController_syncPermission",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["permissions"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/twofa/authenticate": {
      "post": {
        "operationId": "TwofaController_authenticate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TwofaCodeDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } }
      }
    },
    "/api/twofa": {
      "put": {
        "operationId": "TwofaController_toggleTwoFa",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TwoFaStatusUpdateDto" }
            }
          }
        },
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwoFaStatusUpdateResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "Taral API",
    "description": "Taral API docs",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "GetProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "05159674-06ea-4bc2-b750-603b0f454025"
          },
          "title": { "type": "string", "example": "Product Title" },
          "issuanceDate": {
            "format": "date-time",
            "type": "string",
            "example": "12-12-2022"
          },
          "maturityDate": {
            "format": "date-time",
            "type": "string",
            "example": "12-12-2022"
          },
          "amount": { "type": "number", "example": "650000" }
        },
        "required": ["id", "title", "issuanceDate", "maturityDate", "amount"]
      },
      "GetApplicationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "05159674-06ea-4bc2-b750-603b0f454025"
          },
          "title": { "type": "string", "example": "Application Title" },
          "issuanceDate": {
            "format": "date-time",
            "type": "string",
            "example": "12-12-2022"
          }
        },
        "required": ["id", "title", "issuanceDate"]
      },
      "GetEntityDetailsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "05159674-06ea-4bc2-b750-603b0f454025"
          },
          "logo": {
            "type": "string",
            "example": "05159674-06ea-4bc2-b750-603b0f454025.png"
          },
          "name": { "type": "string", "example": "Engelbrecht Ltd" },
          "beneficialOwner": { "type": "string", "example": "John Smith" },
          "abbreviation": { "type": "string", "example": "55-NB" },
          "nationality": { "type": "string", "example": "German" },
          "headquaters": { "type": "string", "example": "Berlin" },
          "industryType": {
            "type": "string",
            "example": "Information Technology"
          },
          "coreBusiness": {
            "type": "string",
            "example": "Software Development"
          },
          "incorporationDate": {
            "format": "date-time",
            "type": "string",
            "example": "12-12-2022"
          },
          "legalForm": { "type": "string", "example": "Limited" },
          "products": {
            "example": {
              "id": "05159674-06ea-4bc2-b750-603b0f454025",
              "title": "Product Title",
              "issuanceDate": "12-12-2022",
              "maturityDate": "12-12-2022",
              "amount": 650000
            },
            "type": "array",
            "items": { "$ref": "#/components/schemas/GetProductResponse" }
          },
          "applications": {
            "example": {
              "id": "05159674-06ea-4bc2-b750-603b0f454025",
              "title": "Application Title",
              "issuanceDate": "12-12-2022"
            },
            "type": "array",
            "items": { "$ref": "#/components/schemas/GetApplicationResponse" }
          }
        },
        "required": [
          "id",
          "logo",
          "name",
          "beneficialOwner",
          "abbreviation",
          "nationality",
          "headquaters",
          "industryType",
          "coreBusiness",
          "incorporationDate",
          "legalForm",
          "products",
          "applications"
        ]
      },
      "CreateFileResponse": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "file.pdf" },
          "hash": {
            "type": "string",
            "example": "0x39373839393763306535616630353865633736393535333062643163313633393430656461333935393734633939356165373665386463313131343638363235"
          },
          "id": {
            "type": "string",
            "example": "c074f1ae-3f34-4b95-a103-328e94ef733a"
          },
          "signedHash": { "type": "string", "example": "signed-message" }
        },
        "required": ["name", "hash", "id", "signedHash"]
      },
      "UpdateFileResponse": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "file.pdf" },
          "hash": {
            "type": "string",
            "example": "0x39373839393763306535616630353865633736393535333062643163313633393430656461333935393734633939356165373665386463313131343638363235"
          },
          "id": {
            "type": "string",
            "example": "c074f1ae-3f34-4b95-a103-328e94ef733a"
          },
          "signedHash": { "type": "string", "example": "signed-message" }
        },
        "required": ["name", "hash", "id", "signedHash"]
      },
      "RegisterUserDto": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": { "type": "string" },
          "password": {
            "type": "string",
            "minLength": 6,
            "maxLength": 20,
            "pattern": "/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{6,20}$/"
          },
          "name": { "type": "string" }
        },
        "required": ["username", "email", "password", "name"]
      },
      "UserSerializer": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": { "type": "string" },
          "name": { "type": "string" },
          "address": { "type": "string" },
          "isTwoFAEnabled": { "type": "boolean" },
          "contact": { "type": "string" },
          "avatar": { "type": "string" },
          "status": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" }
        },
        "required": [
          "username",
          "email",
          "name",
          "address",
          "isTwoFAEnabled",
          "contact",
          "avatar"
        ]
      },
      "UserLoginDto": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" },
          "remember": { "type": "boolean" }
        },
        "required": ["username", "password", "remember"]
      },
      "ForgetPasswordDto": {
        "type": "object",
        "properties": { "email": { "type": "string" } },
        "required": ["email"]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "password": {
            "type": "string",
            "minLength": 6,
            "maxLength": 20,
            "pattern": "/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{6,20}$/"
          },
          "confirmPassword": { "type": "string" }
        },
        "required": ["token", "password", "confirmPassword"]
      },
      "UpdateUserProfileDto": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": { "type": "string" },
          "name": { "type": "string" },
          "address": { "type": "string" },
          "contact": { "type": "string" },
          "avatar": { "type": "string" }
        }
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "oldPassword": { "type": "string" },
          "password": {
            "type": "string",
            "minLength": 6,
            "maxLength": 20,
            "pattern": "/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{6,20}$/"
          },
          "confirmPassword": { "type": "string" }
        },
        "required": ["oldPassword", "password", "confirmPassword"]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "blocked"]
          },
          "roleId": { "type": "number" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "name": { "type": "string" }
        },
        "required": ["status", "roleId", "username", "email", "name"]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "email": { "type": "string" },
          "name": { "type": "string" },
          "address": { "type": "string" },
          "contact": { "type": "string" },
          "status": {
            "enum": ["active", "inactive", "blocked"],
            "type": "string"
          },
          "roleId": { "type": "number" }
        }
      },
      "RefreshTokenEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "userId": { "type": "number" },
          "ip": { "type": "string" },
          "userAgent": { "type": "string" },
          "browser": { "type": "string" },
          "os": { "type": "string" },
          "isRevoked": { "type": "boolean" },
          "expires": { "format": "date-time", "type": "string" }
        },
        "required": [
          "id",
          "userId",
          "ip",
          "userAgent",
          "browser",
          "os",
          "isRevoked",
          "expires"
        ]
      },
      "CreateEmailTemplateDto": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "maxLength": 100 },
          "sender": { "type": "string" },
          "subject": { "type": "string" },
          "body": { "type": "string", "minLength": 50 },
          "isDefault": { "type": "boolean" }
        },
        "required": ["title", "sender", "subject", "body", "isDefault"]
      },
      "EmailTemplate": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "slug": { "type": "string" },
          "sender": { "type": "string" },
          "subject": { "type": "string" },
          "body": { "type": "string" },
          "isDefault": { "type": "boolean" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" }
        },
        "required": ["title", "slug", "sender", "subject", "body", "isDefault"]
      },
      "UpdateEmailTemplateDto": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "maxLength": 100 },
          "sender": { "type": "string" },
          "subject": { "type": "string" },
          "body": { "type": "string", "minLength": 50 },
          "isDefault": { "type": "boolean" }
        }
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "minLength": 2, "maxLength": 100 },
          "description": { "type": "string" },
          "permissions": { "type": "array", "items": { "type": "number" } }
        },
        "required": ["name", "description", "permissions"]
      },
      "RoleSerializer": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "description": { "type": "string" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" }
        },
        "required": ["name"]
      },
      "UpdateRoleDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "minLength": 2, "maxLength": 100 },
          "description": { "type": "string" },
          "permissions": { "type": "array", "items": { "type": "number" } }
        }
      },
      "CreatePermissionDto": {
        "type": "object",
        "properties": {
          "resource": { "type": "string", "maxLength": 50 },
          "description": { "type": "string" },
          "path": { "type": "string", "maxLength": 50 },
          "method": {
            "type": "string",
            "enum": ["get", "post", "any", "delete", "options", "options"]
          }
        },
        "required": ["resource", "description", "path", "method"]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "resource": { "type": "string" },
          "description": { "type": "string" },
          "path": { "type": "string" },
          "method": { "type": "string" },
          "isDefault": { "type": "boolean" },
          "createdAt": { "format": "date-time", "type": "string" },
          "updatedAt": { "format": "date-time", "type": "string" }
        },
        "required": ["resource", "description", "path", "method", "isDefault"]
      },
      "UpdatePermissionDto": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "resource": { "type": "string", "maxLength": 50 },
          "path": { "type": "string", "maxLength": 50 },
          "method": {
            "type": "string",
            "enum": ["get", "post", "any", "delete", "options", "options"]
          }
        }
      },
      "TwofaCodeDto": {
        "type": "object",
        "properties": { "code": { "type": "string" } },
        "required": ["code"]
      },
      "TwoFaStatusUpdateDto": {
        "type": "object",
        "properties": { "isTwoFAEnabled": { "type": "boolean" } },
        "required": ["isTwoFAEnabled"]
      },
      "TwoFaStatusUpdateResult": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "qrcodeUri": { "type": "string" }
        },
        "required": ["success", "qrcodeUri"]
      }
    }
  }
}
