version: '3'

services:
  postgres:
    image: postgres:14.2
    ports:
      - 5432:5432
    volumes:
      - ./.data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-root}
      PGUSER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_DB: ${POSTGRES_DB:-api}

  db-backup:
    build:
      context: ./docker/backup
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres
      DB_USER: ${POSTGRES_USER:-root}
      DB_PASS: ${POSTGRES_PASSWORD:-secret}
      DB_NAME: ${POSTGRES_DB:-api}
    volumes:
      - ./backups:/backups
    depends_on:
      - postgres

  api: 
    container_name: api
    build:
      context: .
      dockerfile: portal.Dockerfile
    ports:
      - 3000:3000
    # command: tail -f /dev/null
    volumes:
      - ./standalone/portal-api/local_storage:/usr/app/local_storage
      - ./standalone/portal-api/config:/usr/app/config
      - ./standalone/portal-api/logs:/usr/app/logs
    depends_on:
      - postgres
      - redis
    environment:
      APP_RUN_THROTTLE: ${APP_RUN_THROTTLE:-false}
      APP_RUN_CHAINHOOK: ${APP_RUN_CHAINHOOK:-false}
      APP_RUN_JOBS: ${APP_RUN_JOBS:-false}
      APP_RUN_EVENTS: ${APP_RUN_EVENTS:-false}
      APP_NAME: ${APP_NAME:-taralia}
      FRONTEND_DOMAIN: ${FRONTEND_DOMAIN:-http://localhost:3001}
      BACKEND_DOMAIN: ${BACKEND_DOMAIN:-http://localhost:3000}
      APP_PORT: ${APP_PORT:-3000}
      API_PREFIX: ${API_PREFIX:-api}
      APP_FALLBACK_LANGUAGE: ${APP_FALLBACK_LANGUAGE:-en}
      NODE_ENV: ${NODE_ENV:-production}
      APP_IS_SAME_SITE: ${APP_IS_SAME_SITE:-false}
      LOGGING_ROTATE_DIRECTORY: ${LOGGING_ROTATE_DIRECTORY:-logs}
      THROTTLE_GLOBAL_TTL: ${THROTTLE_GLOBAL_TTL:-60}
      THROTTLE_GLOBAL_LIMIT: ${THROTTLE_GLOBAL_LIMIT:-100}
      THROTTLE_ENABLED: ${THROTTLE_ENABLED:-false}
      THROTTLE_LOGIN_PREFIX: ${THROTTLE_LOGIN_PREFIX:-login-failed-throttle}
      THROTTLE_LOGIN_LIMIT: ${THROTTLE_LOGIN_LIMIT:-5}
      THROTTLE_LOGIN_DURATION: ${THROTTLE_LOGIN_DURATION:-2592000}
      THROTTLE_LOGIN_BLOCK_DURATION: ${THROTTLE_LOGIN_BLOCK_DURATION:-3000}

      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      REDIS_USERNAME: ${REDIS_USERNAME:-}
      REDIS_DB: ${REDIS_DB:-}
      REDIS_DRIVER: ${REDIS_DRIVER:-redis}

      DATABASE_URL: ${DATABASE_URL:-}
      DATABASE_TYPE: ${DATABASE_TYPE:-postgres}
      DATABASE_HOST: ${DATABASE_HOST:-postgres}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-secret}
      DATABASE_NAME: ${DATABASE_NAME:-api}
      DATABASE_USERNAME: ${DATABASE_USERNAME:-root}
      DATABASE_SYNCHRONIZE: ${DATABASE_SYNCHRONIZE:-false}
      DATABASE_MAX_CONNECTIONS: ${DATABASE_MAX_CONNECTIONS:-100}
      DATABASE_SSL_ENABLED: ${DATABASE_SSL_ENABLED:-false}
      DATABASE_REJECT_UNAUTHORIZED: ${DATABASE_REJECT_UNAUTHORIZED:-false}
      DATABASE_CA: ${DATABASE_CA:-}
      DATABASE_KEY: ${DATABASE_KEY:-}
      DATABASE_CERT: ${DATABASE_CERT:-}

      MAIL_USER: ${MAIL_USER:-}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-}
      MAIL_FROM: ${MAIL_FROM:-taral}
      MAIL_DEFAULT_EMAIL: ${MAIL_DEFAULT_EMAIL:-taral@localhost}
      MAIL_DEFAULT_NAME: ${MAIL_DEFAULT_NAME:-taral}
      MAIL_QUEUE_NAME: ${MAIL_QUEUE_NAME:-taral-mail}

      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-900}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-604800}
      JWT_COOKIE_EXPIRES_IN: ${JWT_COOKIE_EXPIRES_IN:-604800}
      JWT_SECRET: ${JWT_SECRET:-secret}
      AWS_BUCKET: ${AWS_BUCKET:-}
      AWS_REGION: ${AWS_REGION:-}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      FILE_DRIVER: ${FILE_DRIVER:-local}
      FILE_LOCAL_DIR: ${FILE_LOCAL_DIR:-local_storage}
      LOGGING_LEVEL: ${LOGGING_LEVEL:-error}
      LOGGING_FLUENTDLOGGING: ${LOGGING_FLUENTDLOGGING:-false}
      ONCHAIN_MOCK: ${ONCHAIN_MOCK:-true}
      ONCHAIN_PRIVATE_KEY: ${ONCHAIN_PRIVATE_KEY:-753b7cc01a1a2e86221266a154af739463fce51219d97e4f856cd7200c3bd2a601}
      ONCHAIN_PUBLIC_KEY: ${ONCHAIN_PUBLIC_KEY:-0390a5cac7c33fda49f70bc1b0866fa0ba7a9440d9de647fecb8132ceb76a94dfa}
      ONCHAIN_ADDRESS: ${ONCHAIN_ADDRESS:-ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM}
      ONCHAIN_NETWORK: ${ONCHAIN_NETWORK:-regtest}
      TWOFA_AUTHENTICATION_APP_NAME: ${TWOFA_AUTHENTICATION_APP_NAME:-taral}
      WINSTON_GROUP_NAME: ${WINSTON_GROUP_NAME:-taral-group}
      WINSTON_STREAM_NAME: ${WINSTON_STREAM_NAME:-taral-stream}
      WINSTON_AWS_ACCESS_KEY_ID: ${WINSTON_AWS_ACCESS_KEY_ID:-}
      WINSTON_AWS_SECRET_ACCESS_KEY: ${WINSTON_AWS_SECRET_ACCESS_KEY:-}
      WINSTON_AWS_REGION: ${WINSTON_AWS_REGION:-}

      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-}
      SEQ_URL: ${SEQ_URL}
      SEQ_API_KEY: ${SEQ_API_KEY}

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: dashboard.Dockerfile
    ports:
      - 3001:3000
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_LOCALNET_API_SERVER: ${NEXT_PUBLIC_LOCALNET_API_SERVER:-http://localhost:3999/}
      NEXT_PUBLIC_TESTNET_API_SERVER: ${NEXT_PUBLIC_TESTNET_API_SERVER:-https://api.testnet.hiro.so/}
      NEXT_PUBLIC_REGTEST_API_SERVER: ${NEXT_PUBLIC_REGTEST_API_SERVER:-https://api.testnet.hiro.so/}
      NEXT_PUBLIC_MAINNET_API_SERVER: ${NEXT_PUBLIC_MAINNET_API_SERVER:-https://api.hiro.so/}
      NEXT_PUBLIC_LOCALNET_EXPLORER: ${NEXT_PUBLIC_LOCALNET_EXPLORER:-http://localhost:8000}
      NEXT_PUBLIC_TESTNET_EXPLORER: ${NEXT_PUBLIC_TESTNET_EXPLORER:-https://explorer.stacks.co}
      NEXT_PUBLIC_REGTEST_EXPLORER: ${NEXT_PUBLIC_REGTEST_EXPLORER:-https://explorer.stacks.co}
      NEXT_PUBLIC_MAINNET_EXPLORER: ${NEXT_PUBLIC_MAINNET_EXPLORER:-https://explorer.stacks.co}
      NEXT_PUBLIC_LOCALNET_BITCOIN_EXPLORER: ${NEXT_PUBLIC_LOCALNET_BITCOIN_EXPLORER:-http://localhost:8001}
      NEXT_PUBLIC_TESTNET_BITCOIN_EXPLORER: ${NEXT_PUBLIC_TESTNET_BITCOIN_EXPLORER:-https://live.blockcypher.com/btc-testnet}
      NEXT_PUBLIC_MAINNET_BITCOIN_EXPLORER: ${NEXT_PUBLIC_MAINNET_BITCOIN_EXPLORER:-https://live.blockcypher.com/btc}
      NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL:-http://localhost:3000/api} # even if we're in docker, this is served in the browser, so we need to use the host machine's address, not the container's address
      NEXT_PUBLIC_TARAL_BANK_CONTRACT: ${NEXT_PUBLIC_TARAL_BANK_CONTRACT:-ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.taral-bank}
      NEXT_PUBLIC_TARAL_LENDER_ADDRESS: ${NEXT_PUBLIC_TARAL_LENDER_ADDRESS:-ST2ST2H80NP5C9SPR4ENJ1Z9CDM9PKAJVPYWPQZ50}
      NEXT_PUBLIC_SUSDT_CONTRACT: ${NEXT_PUBLIC_SUSDT_CONTRACT}
      NEXT_PUBLIC_TARAL_LENDER_TESTNET_ADDRESS: ${NEXT_PUBLIC_TARAL_LENDER_TESTNET_ADDRESS}
      NEXT_PUBLIC_SUSDT_TESTNET_CONTRACT: ${NEXT_PUBLIC_SUSDT_TESTNET_CONTRACT}
      NEXT_PUBLIC_TARAL_BANK_TESTNET_CONTRACT: ${NEXT_PUBLIC_TARAL_BANK_TESTNET_CONTRACT}
      NEXT_SHARP_PATH: ${NEXT_SHARP_PATH}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL_INTERNAL: ${NEXTAUTH_URL_INTERNAL}
      NEXTAUTH_INTERNAL_API_URL: ${NEXTAUTH_INTERNAL_API_URL}
      
  sqlpad:
    container_name: sqlpad
    image: sqlpad/sqlpad:5
    hostname: 'sqlpad'
    ports:
      - '3333:3000'
    environment:
      SQLPAD_ADMIN: ${SQLPAD_ADMIN:-admin}
      SQLPAD_ADMIN_PASSWORD: ${SQLPAD_ADMIN_PASSWORD:-admin}
      SQLPAD_APP_LOG_LEVEL: error
      SQLPAD_WEB_LOG_LEVEL: warn
      SQLPAD_SEED_DATA_PATH: /etc/sqlpad/seed-data
      SQLPAD_CONNECTIONS__pgdemo__name: Tariala
      SQLPAD_CONNECTIONS__pgdemo__driver: postgres
      SQLPAD_CONNECTIONS__pgdemo__host: postgres
      SQLPAD_CONNECTIONS__pgdemo__database: ${POSTGRES_DB:-api}
      SQLPAD_CONNECTIONS__pgdemo__username: ${POSTGRES_USER:-root}
      SQLPAD_CONNECTIONS__pgdemo__password: ${POSTGRES_PASSWORD:-secret}
      SQLPAD_CONNECTIONS__pgdemo__multiStatementTransactionEnabled: 'true'
      SQLPAD_CONNECTIONS__pgdemo__idleTimeoutSeconds: 86400
    volumes:
      - ./docker/sqlpad/seed-data:/etc/sqlpad/seed-data

  nginx: 
    container_name: nginx
    build: ./docker/nginx
    depends_on:
      - api
      - frontend
      - seq
      - sqlpad
    environment: 
      API_DOMAIN: ${API_DOMAIN}
      FRONTEND_DOMAIN: ${FRONTEND_DOMAIN}
      SEQ_DOMAIN: ${SEQ_DOMAIN}
      SQLPAD_DOMAIN: ${SQLPAD_DOMAIN}
      LANDING_PAGEE_DOMAIN: ${LANDING_PAGEE_DOMAIN}

    volumes:
      - ./certs/local/fullchain.pem:/etc/nginx/fullchain.pem
      - ./certs/local/privkey.pem:/etc/nginx/privkey.pem
    ports:
      - 80:80
      - 443:443

  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    depends_on:
      - postgres

  seqcli:
    build: ./docker/logging
    depends_on:
      - seq
    restart: on-failure
    environment:
      SEQ_URL: ${SEQ_URL}
      API_KEY_TITLE: ${API_KEY_TITLE}
      API_KEY_TOKEN: ${API_KEY_TOKEN}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      SEQCLI_PATH: ${SEQCLI_PATH}

  seq:
    container_name: seq
    image: datalust/seq:latest
    environment:
      ACCEPT_EULA: Y
      SEQ_FIRSTRUN_ADMINPASSWORDHASH: ${SEQ_FIRSTRUN_ADMINPASSWORDHASH}
      SEQ_FIRSTRUN_REQUIREAUTHENTICATIONFORHTTPINGESTION: true
    ports:
      - 8003:80
  